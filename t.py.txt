def add_pe_flag(in_data, out_data, pvt_data):
    import pandas as pd

    a = pd.read_csv(in_data)
    b = pd.read_csv(pvt_data)
    out_df = a.merge(b[['gcdu_global_id', 'PE_FLAG', 'PE_NAME']], on='gcdu_global_id', how='left')
    out_df.to_csv(out_data, index=False)

    out_df['GRA_FLAG'] = out_df['PE_FLAG'].where(out_df['PE_FLAG'].notna())
    out_df.to_csv(out_data, index=False)


def add_carm_flag_type(in_data, out_data):
    import pandas as pd

    df = pd.read_csv(in_data)
    df['cbflag'] = (df['carm_instance'] == 'CARM_BANK').astype(int)
    df['ccflag'] = (df['carm_instance'] != 'CARM_BANK').astype(int)
    temp_carmflag_1 = df.copy()

    carmflag = temp_carmflag_1.groupby('gcdu_global_id').agg(
        cbcount=('cbflag', 'sum'),
        cccount=('ccflag', 'sum')
    ).reset_index()

    def assign_carm_flag(row):
        if row['cbcount'] == 0:
            return "CFCONLY"
        elif row['cccount'] == 0:
            return "CFBONLY"
        elif row['cbcount'] > 0 and row['cccount'] > 0:
            return "CARMBOTH"
        return None

    carmflag['CARM_FLAG'] = carmflag.apply(assign_carm_flag, axis=1)

    temp_carmflag_2 = temp_carmflag_1.merge(carmflag[['gcdu_global_id', 'CARM_FLAG']], on='gcdu_global_id', how='left')

    temp_carmflag_2['CARM_TYPE'] = temp_carmflag_2['carm_instance'].apply(lambda x: "CFB" if x == "CARM_BANK" else "CFC")
    temp_carmflag_2.to_csv(out_data, index=False)


def identify_model_gid(apl_data, model, out_data):
    import pandas as pd

    df = pd.read_csv(apl_data)

    # Assuming `model` is a dictionary with required scorecard names, descriptions, etc.
    model_scorecard_name = model.get('Scorecard_name', [])
    model_scorecard_desc = model.get('Scorecard_desc', [])
    model_scorecard_grp_desc = model.get('Scorecard_grp_desc', [])
    model_sic = model.get('sic', [])

    temp_apl_model_1 = df[
        df['SCORECARD_NAME'].isin(model_scorecard_name) |
        df['CARM_SCORECARD_DESC'].isin(model_scorecard_desc) |
        df['CREDIT_RISK_SCORECARD_GRP_DESC'].isin(model_scorecard_grp_desc) |
        df['SIC_DESC'].str.upper().isin(model_sic) |
        df['GROUP_SIC_DESC'].str.upper().isin(model_sic)
    ]

    out_df = temp_apl_model_1['GCDU_GLOBAL_ID'].drop_duplicates()
    out_df.to_csv(out_data, index=False)


def create_gid_level_summary(in_data, out_data):
    import pandas as pd

    df = pd.read_csv(in_data)
    df = df[['GCDU_GLOBAL_ID', 'carm_flag', 'carm_type', 'gra_flag']]

    temp_sum_1 = df.copy()
    temp_sum_2 = temp_sum_1.pivot_table(index=['GCDU_GLOBAL_ID', 'carm_flag'], columns='carm_type', values='gra_flag', aggfunc='first').reset_index()
    temp_sum_2.columns.name = None

    temp_sum_2['GRA_FLAG_OVERALL'] = temp_sum_2.apply(
        lambda row: row['gra_flag_CFB'] if pd.notna(row['gra_flag_CFB']) and row['gra_flag_CFB'] != "Inconclusive" else
        row['gra_flag_CFC'] if pd.notna(row['gra_flag_CFC']) and row['gra_flag_CFC'] != "Inconclusive" else
        row['gra_flag_CFB'] if pd.notna(row['gra_flag_CFB']) else
        row['gra_flag_CFC'] if pd.notna(row['gra_flag_CFC']) else None,
        axis=1
    )

    temp_sum_2['GRA_FLAG_TYPE'] = temp_sum_2.apply(
        lambda row: "CFB" if row['gra_flag_CFB'] == temp_sum_2['GRA_FLAG_OVERALL'] else
        "CFC" if row['gra_flag_CFC'] == temp_sum_2['GRA_FLAG_OVERALL'] else None,
        axis=1
    )

    temp_sum_2['CARM_TYPE'] = temp_sum_2['carm_flag'].apply(lambda x: "CFC" if x == "CFCONLY" else "CFB")

    temp_sum_2.to_csv(out_data, index=False)
